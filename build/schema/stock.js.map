{"version":3,"sources":["../../src/schema/stock.js"],"names":["StockSchema","mongoose","Schema","ticker","type","String","required","description","index","name","IPO_date","Date","RatingSchema","buy_rating","Boolean","requried","date","Stock","model","Rating","customizationOptions","StockTC","RatingTC"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,WAAW,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACtCC,EAAAA,MAAM,EAAC;AACLC,IAAAA,IAAI,EAACC,MADA;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,WAAW,EAAE,qBAHR;AAILC,IAAAA,KAAK,EAAC;AAJD,GAD+B;AAOtCC,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAEC,MADF;AAEJE,IAAAA,WAAW,EAAE,oBAFT;AAGJD,IAAAA,QAAQ,EAAE;AAHN,GAPgC;AAYtCI,EAAAA,QAAQ,EAAE;AACRN,IAAAA,IAAI,EAAEO,IADE;AAERJ,IAAAA,WAAW,EAAE;AAFL;AAZ4B,CAApB,CAApB;AAqBA,IAAMK,YAAY,GAAG,IAAIX,qBAASC,MAAb,CAAoB;AACvCE,EAAAA,IAAI,EAAE;AACJA,IAAAA,IAAI,EAAEC,MADF;AAEJ,YAAM,CAAE,eAAF,EAAmB,SAAnB,EAA8B,kBAA9B,CAFF;AAGJC,IAAAA,QAAQ,EAAE,IAHN;AAIJC,IAAAA,WAAW,EAAE;AAJT,GADiC;AAOvCM,EAAAA,UAAU,EAAE;AACVT,IAAAA,IAAI,EAAEU,OADI;AAEVP,IAAAA,WAAW,EAAE,gDAFH;AAGVD,IAAAA,QAAQ,EAAE;AAHA,GAP2B;AAYvCH,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAEC,MADA;AAENU,IAAAA,QAAQ,EAAE,IAFJ;AAGNR,IAAAA,WAAW,EAAE,uCAHP;AAINC,IAAAA,KAAK,EAAC;AAJA,GAZ+B;AAkBvCQ,EAAAA,IAAI,EAAE;AACJZ,IAAAA,IAAI,EAAEO,IADF;AAEJJ,IAAAA,WAAW,EAAE,iCAFT;AAGJD,IAAAA,QAAQ,EAAE;AAHN;AAlBiC,CAApB,CAArB;;AA4BA,IAAMW,KAAK,GAAGhB,qBAASiB,KAAT,CAAe,OAAf,EAAwBlB,WAAxB,CAAd;;AACA,IAAMmB,MAAM,GAAGlB,qBAASiB,KAAT,CAAe,QAAf,EAAyBN,YAAzB,CAAf,C,CAEA;;;AACA,IAAMQ,oBAAoB,GAAG,EAA7B;AACA,IAAMC,OAAO,GAAG,+BAAoBJ,KAApB,EAA2BG,oBAA3B,CAAhB;;AAEA,IAAME,QAAQ,GAAG,+BAAoBH,MAApB,EAA4BC,oBAA5B,CAAjB,C,CAOA","sourcesContent":["import { composeWithMongoose } from 'graphql-compose-mongoose/node8';\r\nimport mongoose, { mongo } from 'mongoose';\r\n\r\nconst StockSchema = new mongoose.Schema({\r\n  ticker:{\r\n    type:String,\r\n    required: true,\r\n    description: \"Ticker ID for stock\",\r\n    index:true\r\n  },\r\n  name: {\r\n    type: String,\r\n    description: \"Name of the stock.\",\r\n    required: true\r\n  }, \r\n  IPO_date: {\r\n    type: Date,\r\n    description: \"Date of IPO.\"\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nconst RatingSchema = new mongoose.Schema({\r\n  type: {\r\n    type: String,\r\n    enum: [ 'twoHundredDay', 'twitter', 'fourCandleHammer'],\r\n    required: true,\r\n    description: \"Type of metric associated.\"\r\n  },\r\n  buy_rating: {\r\n    type: Boolean,\r\n    description: \"Buy rating if true. Don't buy rating if false.\",\r\n    required: true\r\n  },\r\n  ticker: {\r\n    type: String, \r\n    requried: true,\r\n    description: \"Stock this metric is associated with.\",\r\n    index:true\r\n  },\r\n  date: {\r\n    type: Date,\r\n    description: \"Date-Time this rating occurred.\",\r\n    required: true\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nconst Stock = mongoose.model('Stock', StockSchema);\r\nconst Rating = mongoose.model('Rating', RatingSchema);\r\n\r\n// STEP 2: CONVERT MONGOOSE MODEL TO GraphQL PIECES\r\nconst customizationOptions = {};\r\nconst StockTC = composeWithMongoose(Stock, customizationOptions);\r\n\r\nconst RatingTC = composeWithMongoose(Rating, customizationOptions);\r\n\r\n\r\nexport { StockTC, RatingTC };\r\n\r\n\r\n\r\n// TODO: Get 20 day high"],"file":"stock.js"}