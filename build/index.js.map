{"version":3,"sources":["../src/index.js"],"names":["mongoose","require","cors","expressGraphql","main","app","use","console","log","process","env","MONGODB_URI","connect","db","connection","on","once","schema","graphiql","get","req","res","send","listen","PORT"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAMG,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,GAAG,GAAG,0BAAZ;AAEAA,EAAAA,GAAG,CAACC,GAAJ,CAAQJ,IAAI,EAAZ;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,OAAO,CAACC,GAAR,CAAYC,WAA5C;AACAX,EAAAA,QAAQ,CAACY,OAAT,CAAiBH,OAAO,CAACC,GAAR,CAAYC,WAA7B;AACA,MAAIE,EAAE,GAAGb,QAAQ,CAACc,UAAlB;AACAD,EAAAA,EAAE,CAACE,EAAH,CAAM,OAAN,EAAe,YAAK;AAACR,IAAAA,OAAO,CAACC,GAAR,CAAa,kCAAb;AAAiD,GAAtE;AACAK,EAAAA,EAAE,CAACG,IAAH,CAAQ,MAAR,EAAgB,YAAM;AACpBT,IAAAA,OAAO,CAACC,GAAR,CAAa,0BAAb;AACD,GAFD;AAGAH,EAAAA,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBH,cAAc,CAAE;AAClCc,IAAAA,MAAM,EAAEA,0BAD0B;AAElCC,IAAAA,QAAQ,EAAC;AAFyB,GAAF,CAAlC;AAKAb,EAAAA,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,IAAAA,GAAG,CAACC,IAAJ,CAAS,IAAT;AACD,GAFD;AAIAjB,EAAAA,GAAG,CAACkB,MAAJ,CAAYd,OAAO,CAACC,GAAR,CAAYc,IAAZ,IAAoB,IAAhC,EAAsC,YAAM;AAC1CjB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,GAFD;AAGD,CAxBD;;AA0BAJ,IAAI","sourcesContent":["import express from 'express';\r\nimport 'dotenv/config';\r\nimport schema from \"./schema/schemaComposer.js\"\r\nvar mongoose = require('mongoose');\r\nvar cors = require('cors');\r\nvar expressGraphql = require('express-graphql');\r\n\r\nconst main = () => {\r\n  const app = express();\r\n\r\n  app.use(cors());\r\n\r\n  console.log(\"Data base name: \", process.env.MONGODB_URI);\r\n  mongoose.connect(process.env.MONGODB_URI);\r\n  var db = mongoose.connection;\r\n  db.on('error', ()=> {console.log( '---FAILED to connect to mongoose')})\r\n  db.once('open', () => {\r\n    console.log( '+++Connected to mongoose')\r\n  })\r\n  app.use('/graphql', expressGraphql ({\r\n    schema: schema,\r\n    graphiql:true\r\n  }))\r\n\r\n  app.get('/', (req, res) => {\r\n    res.send('ok');\r\n  })\r\n  \r\n  app.listen( process.env.PORT || 8000, () => {\r\n    console.log('Graphql Server Running');\r\n  });\r\n}\r\n\r\nmain();\r\n"],"file":"index.js"}